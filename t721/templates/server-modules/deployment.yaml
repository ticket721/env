---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
    name: "{{ .Release.Name }}-server-modules"
    labels:
        app: "{{ template "t721.fullname" . }}-server-modules"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
spec:
    replicas: 1
    template:
        metadata:
            labels:
                app: "{{ template "t721.fullname" . }}-server-modules"
                chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
                release: "{{ .Release.Name }}"
                heritage: "{{ .Release.Service }}"
        spec:
            containers:
                - name: "{{ .Release.Name }}-server-modules-antenna"
                  image: "{{ .Values.serverModules.container.image }}:{{ .Values.serverModules.container.version }}"
                  imagePullPolicy: Always
                  command: ["node", "ModuleRunner.js", "antenna"]
                  env:
                    - name: DATABASE_HOST
                      value: "{{ .Release.Name }}-pg-svc"
                    - name: DATABASE_NAME
                      value: {{ .Values.postgres.config.databaseName }}
                    - name: DATABASE_USERNAME
                      value: {{ .Values.postgres.config.databaseUser }}
                    - name: DATABASE_PASSWORD
                      value: {{ .Values.postgres.config.databasePassword }}
                    - name: DATABASE_PORT
                      value: "{{ .Values.postgres.config.databasePort }}"
                    - name: ETH_NODE_PROTOCOL
                      value: http
                    - name: ETH_NODE_HOST
                      value: "{{ .Release.Name }}-geth-internal-svc"
                    - name: ETH_NODE_PORT
                      value: "{{ .Values.geth.service.rpcPort }}"
